setwd(".")
setwd("../data/")
# Read dataframe
df <- read.table("clustered_estc_price_data.txt",
sep="\t",
quote='"',
fill=NA,
na.strings='NULL',
colClasses = c('character','numeric','character','numeric','character', 'numeric',
rep('character',3), rep('numeric',3), rep('character',2), rep('numeric',3), 'character')
)
# Provide column headers
colnames(df) <- c("estc_id","year","raw_size","clean_size","raw_pages","clean_pages","notes","raw_price","parsed_price","farthings","illustrations","farthings_per_page","author","title","ignore","cluster","unique_years_in_cluster","canonical_title")
library(ggplot2)
View(df)
ggplot(df,aes(x=clean_price,y=clean_pages))+
stat_density2d(aes(fill=..level..), geom="polygon") +
scale_fill_gradient(low="blue", high="red")
View(df)
ggplot(df,aes(x=farthings,y=clean_pages))+
stat_density2d(aes(fill=..level..), geom="polygon") +
scale_fill_gradient(low="blue", high="red")
ggplot(subset(df, clean_pages > 30),aes(x=farthings,y=clean_pages))+
stat_density2d(aes(fill=..level..), geom="polygon") +
scale_fill_gradient(low="blue", high="red")
ggplot(subset(df, clean_pages > 25),aes(x=farthings,y=clean_pages))+
stat_density2d(aes(fill=..level..), geom="polygon") +
scale_fill_gradient(low="blue", high="red")
ggplot(subset(df, clean_pages > 20),aes(x=farthings,y=clean_pages))+
stat_density2d(aes(fill=..level..), geom="polygon") +
scale_fill_gradient(low="blue", high="red")
ggplot(subset(df, clean_pages > 30),aes(x=farthings,y=clean_pages))+
stat_density2d(aes(fill=..level..), geom="polygon") +
scale_fill_gradient(low="blue", high="red")
ggplot(df, aes(x=farthings,y=clean_pages)) +
geom_jitter()
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages)) +
geom_jitter()
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages)) +
geom_jitter(width=5)
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages)) +
geom_jitter(width=50)
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages)) +
geom_jitter(position = position_jitter(width = .5))
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages)) +
geom_jitter(position = position_jitter(width = 5))
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages)) +
geom_jitter(position = position_jitter(width = 20))
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages)) +
geom_jitter(position = position_jitter(width = 15))
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages)) +
geom_jitter(position = position_jitter(width = 15)) +
geom_smooth()
ggplot(subset(df, farthings < 200 & clean_pages < 500 & clean_pages > 30), aes(x=farthings,y=clean_pages)) +
geom_jitter(position = position_jitter(width = 15)) +
geom_smooth()
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages)) +
geom_jitter(position = position_jitter(width = 15)) +
geom_smooth()
View(df)
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages, colour=illustrations)) +
geom_jitter(position = position_jitter(width = 15)) +
geom_smooth()
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages, colour=factor(illustrations)) +
geom_jitter(position = position_jitter(width = 15)) +
geom_smooth()
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages, colour=factor(illustrations))) +
geom_jitter(position = position_jitter(width = 15)) +
geom_smooth()
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages, colour=factor(illustrations))) +
geom_jitter(position = position_jitter(width = 15)) +
geom_smooth()
ggplot(subset(df, clean_pages > 30),aes(x=farthings,y=clean_pages))+
stat_density2d(aes(fill=..level..), geom="polygon") +
scale_fill_gradient(low="blue", high="red")
View(df)
setwd("~/Desktop")
library(ggplot2)
df <- read.table("game_agg.csv", sep=",", header=T)
# Drop rows with NA
df <- df[complete.cases(df),]
#######
# ORB #
#######
wins.df <- aggregate(wins ~ orb, data=subset(df, wins=="TRUE"), FUN = 'length')
ggplot(wins.df, aes(x=orb,y=wins)) +
geom_bar(stat='identity')
fg.df <- aggregate(wins ~ fg, data=df, FUN='mean')
ggplot(fg.df, aes(x=fg,y=wins)) +
geom_point()
View(wins.df)
wins.df <- aggregate(wins ~ orb, data=subset(df, wins=="TRUE"), FUN = 'length')
percent.df <- aggregate(wins ~ orb, data=subset(df, wins=="TRUE"), FUN='mean')
View(percent.df)
View(wins.df)
wins.df <- aggregate(wins ~ drb, data=df, FUN = 'mean')
View(wins.df)
percent.df <- aggregate(wins ~ orb, data=df, FUN='length')
percent.df <- aggregate(wins ~ drb, data=df, FUN='length')
View(wins.df)
View(percent.df)
View(percent.df)
subset(df, drb==5)
View(percent.df)
View(df)
View(df)
df$wins[ df$wins == "TRUE" ] <- 1
df$wins[ df$wins == "FALSE" ] <- 0
View(df)
wins.df <- aggregate(wins ~ orb, data=df, FUN = 'length')
View(wins.df)
subset(df, orb==0)
View(wins.df)
wins.df <- aggregate(wins ~ drb, data=df, FUN = 'mean')
View(wins.df)
subset(df, drb==5)
subset(df, drb==7)
df <- read.table("game_agg.csv", sep=",", header=T)
wins.df <- aggregate(wins ~ drb, data=df, FUN = 'mean')
View(wins.df)
observations.df <- aggregate(wins ~ orb, subset(data=df, wins=="TRUE"), FUN = 'length')
View(df)
df <- read.table("game_agg.csv", sep=",", header=T)
View(df)
observations.df <- aggregate(wins ~ orb, subset(data=df, wins=="TRUE"), FUN = 'length')
View(df)
df <- df[complete.cases(df),]
observations.df <- aggregate(wins ~ orb, subset(data=df, wins=="TRUE"), FUN = 'length')
df <- read.table("game_agg.csv", sep=",", header=T)
# Drop rows with NA
df <- df[complete.cases(df),]
#######
# ORB #
#######
wins.df <- aggregate(wins ~ orb, data=subset(df, wins=="TRUE"), FUN = 'length')
wins.df <- aggregate(wins ~ orb, data=df, FUN='mean')
observations.df <- aggregate(wins ~ orb, data=subset(df, wins=="TRUE"), FUN = 'length')
wins.df <- aggregate(wins ~ orb, data=df, FUN='mean')
View(wins.df)
observations.df <- aggregate(wins ~ drb, data=subset(df, wins=="TRUE"), FUN = 'length')
wins.df <- aggregate(wins ~ drb, data=df, FUN='mean')
View(wins.df)
View(observations.df)
View(wins.df)
observations.df <- aggregate(wins ~ drb, data=df, FUN = 'length')
wins.df <- aggregate(wins ~ drb, data=df, FUN='mean')
View(observations.df)
subset(df, drb==6)
View(observations.df)
nrow(subset(df, drb==11))
colnames(observations.df) <- c("drb","observations")
wins.df <- aggregate(wins ~ drb, data=df, FUN='mean')
View(wins.df)
# Compute number of observations for each drb value
observations.df <- aggregate(wins ~ drb, data=df, FUN = 'length')
# After investigating observations.df, we can spot check that there are 84 games with orb==6
nrow(subset(df, drb==11))
# Rename the column headers of observations.df
colnames(observations.df) <- c("drb","observations")
# Compute sum of wins over total number of games for each drb
wins.df <- aggregate(wins ~ drb, data=df, FUN='mean')
# Rename column headers
colnames(wins.df) <- c("drb","mean_wins")
merged.df <- merge(observations.df, wins.df)
View(merged.df)
ggplot(wins.df, aes(x=orb,y=wins)) +
geom_bar(stat='identity')
View(merged.df)
ggplot(merged.df, aes(x=drb,y=mean_wins, colour=observations)) +
geom_bar(stat="identity")
ggplot(merged.df, aes(x=drb,y=mean_wins, fill=observations)) +
geom_bar(stat="identity")
ggplot(merged.df, aes(x=drb,y=mean_wins, fill=observations)) +
geom_point(stat="identity")
ggplot(merged.df, aes(x=drb,y=mean_wins, colour=observations)) +
geom_point(stat="identity")
# Compute number of observations for each drb value
observations.df <- aggregate(wins ~ drb, data=df, FUN = 'length')
# After investigating observations.df, we can spot check that there are 84 games with orb==6
nrow(subset(df, drb==11))
# Rename the column headers of observations.df
colnames(observations.df) <- c("drb","observations")
# Compute sum of wins over total number of games for each drb
wins.df <- aggregate(wins ~ drb, data=df, FUN='mean')
# Rename column headers
colnames(wins.df) <- c("drb","mean_wins")
# Combine these dataframes
merged.df <- merge(observations.df, wins.df)
ggplot(merged.df, aes(x=drb,y=mean_wins, colour=observations)) +
geom_point()
ggplot(merged.df, aes(x=drb,y=mean_wins, colour=observations)) +
geom_point() +
scale_colour_gradient(low="red", high="blue", space="Lab")
ggplot(merged.df, aes(x=drb,y=mean_wins, colour=observations)) +
geom_point() +
scale_colour_gradient(low="red", high="blue")
ggplot(merged.df, aes(x=drb,y=mean_wins, colour=log(observations))) +
geom_point() +
scale_colour_gradient(low="red", high="blue")
ggplot(merged.df, aes(x=drb,y=mean_wins, colour=observations)) +
geom_point() +
scale_colour_gradient(low="red", high="blue")
# Set workding directory to data location
setwd(".")
setwd("../data/")
setwd("../data/")
setwd(".")
setwd("../data/")
setwd("~/Desktop/cheap-literature-hypothesis/data")
setwd("../data/")
df <- read.table("clustered_estc_price_data.txt",
sep="\t",
quote='"',
fill=NA,
na.strings='NULL',
colClasses = c('character','numeric','character','numeric','character', 'numeric',
rep('character',3), rep('numeric',3), rep('character',2), rep('numeric',3), 'character')
)
# Provide column headers
colnames(df) <- c("estc_id","year","raw_size","clean_size","raw_pages","clean_pages","notes","raw_price","parsed_price","farthings","illustrations","farthings_per_page","author","title","ignore","cluster","unique_years_in_cluster","canonical_title")
ggplot(subset(df, clean_pages > 30),aes(x=farthings,y=clean_pages))+
stat_density2d(aes(fill=..level..), geom="polygon") +
scale_fill_gradient(low="blue", high="red")
ggplot(subset(df, farthings < 200 & clean_pages < 500), aes(x=farthings,y=clean_pages, colour=factor(illustrations))) +
geom_jitter(position = position_jitter(width = 15)) +
geom_smooth()
View(df)
View(df)
plot(density(df$farthings))
plot(density(subset(df, farthings < 500)$farthings))
plot(density(subset(df, farthings < 500)$farthings_per_page))
plot(density(subset(df, farthings_per_page < 10)$farthings))
plot(density(subset(df, farthings_per_page < 10)$farthings_per_page))
plot(density(subset(df, farthings_per_page < 5)$farthings_per_page))
plot(density(subset(df, farthings_per_page < 2)$farthings_per_page))
plot(density(subset(df, farthings_per_page < 1)$farthings_per_page))
plot(density(subset(df, farthings_per_page < 3)$farthings_per_page))
plot(density(subset(df, farthings_per_page < 2)$farthings_per_page))
plot(density(subset(df, farthings_per_page < 1.5)$farthings_per_page))
plot(density(subset(df, farthings_per_page < 2.5)$farthings_per_page))
long_and_clean <- subset(df, farthings_per_page < 2, clean_pages > 30)
plot(density(long_and_clean$farthings_per_page))
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 30)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 20)
plot(density(long_and_clean$farthings_per_page))
plot(density(long_and_clean$farthings_per_page))
plot(density(long_and_clean$farthings))
plot(density(long_and_clean$farthings_per_page))
long_and_clean <- subset(df, farthings_per_page < 3 &clean_pages > 20)
long_and_clean <- subset(df, farthings_per_page < 3 &clean_pages > 30)
plot(density(long_and_clean$farthings_per_page))
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 30)
plot(density(long_and_clean$farthings_per_page))
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 10)
plot(density(long_and_clean$farthings_per_page))
long_and_clean <- subset(df, farthings_per_page < 1.5 &clean_pages > 10)
plot(density(long_and_clean$farthings_per_page))
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 10)
plot(density(long_and_clean$farthings_per_page))
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_density()
shapiro.test(long_and_clean$farthings_per_page)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 30)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 500)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 50)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 70)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_density()
shapiro.test(long_and_clean$farthings_per_page)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 200)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 200)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 200)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 200)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_density()
shapiro.test(long_and_clean$farthings_per_page)
words1 = rnorm(100);
shapiro.test(words1)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 70)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=1)
############
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 70)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.1)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 70)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.01)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 70)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.05)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.1)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.08)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.07)
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 30)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.07)
p <- ggplot(df, aes(x=clean_pages)) +
geom_histogram(binwidth=10) +
scale_x_continuous(limits=c(0,200),
breaks=round(seq(0, 200, by = 10),1) ) +
xlab("Number of Pages") +
ylab("Number of Observations") +
ggtitle("Distribution of Page Counts in the ESTC Price Corpus")
# Save page lengths plot
ggsave(p, file="page_distributions.png")
p <- ggplot(df, aes(x=year)) +
geom_histogram(binwidth=1) +
scale_x_continuous() +
xlab("Year") +
ylab("Number of Observations") +
ggtitle("Distribution of Publication Dates in the ESTC Price Corpus")
# Save the publication date plot
ggsave(p, file="publication_dates.png")
df$size[ df$clean_size == 2 ] <- 'folio'
df$size[ df$clean_size == 4 ] <- 'quarto'
df$size[ df$clean_size == 8 ] <- 'octavo'
df$size[ df$clean_size == 12 ] <- 'duodecimo'
df$size[ df$clean_size == 16 ] <- 'sixteenmo'
# Plot the distribution over the book sizes
p <- ggplot(df, aes(x=size)) +
geom_bar(stat="bin") +
xlab("Book Size") +
ylab("Number of Observations") +
ggtitle("Distribution of Book Sizes in the ESTC Price Corpus") +
scale_x_discrete(limits=c("octavo","duodecimo","quarto","folio","sixteenmo"))
# Save the book size plot
ggsave(p, file="book_sizes.png")
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.07) +
xlab("Farthings per Page") +
ylab("Number of Observations") +
ggtitle("Distribution of Book Cost in the ESTC Price Corpus")
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 30)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.07) +
xlab("Farthings per Page") +
ylab("Number of Observations") +
ggtitle("Distribution of Book Costs in the ESTC Price Corpus")
long_and_clean <- subset(df, farthings_per_page < 2 &clean_pages > 30)
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.07) +
xlab("Farthings per Page") +
ylab("Number of Observations") +
ggtitle("Distribution of Book Prices in the ESTC Price Corpus")
ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.07) +
xlab("Farthings per Page") +
ylab("Number of Observations") +
ggtitle("Distribution of Book Prices in the ESTC Price Corpus") +
scale_x_continuous(breaks=round(seq(0,2, by = .1),1) )
ggsave(p, file="price_distribution.png")
ggsave(p, file="price_distribution.png")
p <- ggplot(long_and_clean, aes(x=farthings_per_page)) +
geom_histogram(binwidth=.07) +
xlab("Farthings per Page") +
ylab("Number of Observations") +
ggtitle("Distribution of Book Prices in the ESTC Price Corpus") +
scale_x_continuous(breaks=round(seq(0,2, by = .1),1) )
ggsave(p, file="price_distribution.png")
ggplot(df, aes(x=year)) +
geom_histogram(binwidth=1) +
scale_x_continuous() +
xlab("Year") +
ylab("Number of Observations") +
ggtitle("Distribution of Publication Dates in the ESTC Price Corpus")
########################################
# Calculate number of estc ids per condition (clean_size*year)
n_mean_sd_by_size<- aggregate(df["estc_id"], by=df[c("clean_size","year")], FUN=length)
# Change colname of the number of estc ids per condition to "N"
names(n_mean_sd_by_size)[names(n_mean_sd_by_size)=="estc_id"] <- "N"
# Calculate mean price of books for each size and year combination
mean_by_size.df <- aggregate(farthings_per_page ~ year + clean_size, data = subset(df, clean_pages > 20 ), FUN = 'mean')
# Change colname of the mean price per size and year combination
names(mean_by_size.df)[names(mean_by_size.df)=="farthings_per_page"] <- "mean"
# Merge the dataframes
n_mean_sd_by_size <- merge(n_mean_sd_by_size, mean_by_size.df)
# Get the sample (n-1) standard deviation for farthings_per_page ~ each size and year combination
sd_by_size.df <- aggregate(farthings_per_page ~ year + clean_size, data = subset(df, clean_pages > 20 ), FUN = 'sd')
# Change the colname of the sd per size and year combination
names(sd_by_size.df)[names(sd_by_size.df)=="farthings_per_page"] <- "sd"
# Merge the sd into n_mean_sd_by_size
n_mean_sd_by_size <- merge(n_mean_sd_by_size, sd_by_size.df)
# Retrieve wage data from Wrigley and Schofield
wage_data.df <- read.table('wrigley_schofield_six_forty_farthings.txt')
# Rename wage data columns (use colheaders of good_sizes for easy dataframe concatenation)
colnames(wage_data.df) <- c("year", "clean_size", "mean")
# Take the subset of the wage data pertaining to years 1700-1800
wage_data.df <- subset(wage_data.df, 1699 < year & year < 1801)
# Append fill values for wage data df
wage_data.df$N <- NA
wage_data.df$sd <- NA
# Merge wage data with book price stats
n_mean_sd_by_size <- rbind(n_mean_sd_by_size, wage_data.df)
# Rename book sizes for clarity
n_mean_sd_by_size$size[ n_mean_sd_by_size$clean_size == 4 ] <- 'quarto'
n_mean_sd_by_size$size[ n_mean_sd_by_size$clean_size == 8 ] <- 'octavo'
n_mean_sd_by_size$size[ n_mean_sd_by_size$clean_size == 12 ] <- 'duodecimo'
n_mean_sd_by_size$size[ n_mean_sd_by_size$clean_size == 'labour' ] <- 'wrigley labour estimate'
# Plot the aggregated df
p <- ggplot( subset(n_mean_sd_by_size, !is.na(size)), aes(x=year, y=mean, color=size) ) +
geom_point() +
geom_smooth() +
#geom_errorbar( aes(ymin=mean-sd, ymax=mean+sd), width=.1) +
scale_x_continuous(limits=c(1700, 1800)) +
facet_wrap(~size, scales="free_y", ncol=1) +
ylab("Mean Price Per Page") +
xlab("Year") +
ggtitle("Mean Price Per Page of English Volumes Within the ESTC") +
guides(color=FALSE)   # this masks the whole key
# Save the plot
ggsave(p, file="farthings_per_page_by_size.png", scale=2)
ggsave(p, file="farthings_per_page_by_size.png")
df$title_to_plot <- paste( substr(df$canonical_title,0,15), "..." )
# Plot all instances of each book as a unique facet
p <- ggplot(subset(df, unique_years_in_cluster > 2), aes(x=year,y=farthings_per_page, colour=as.factor(cluster))) +
geom_point() +
stat_smooth(method="lm") +
facet_wrap(~title_to_plot, ncol=10) +
scale_x_continuous() +
scale_y_continuous(limits=c(0,3)) +
scale_colour_discrete(guide=FALSE)
ggsave(p, file="book_facets.png", scale=3)
p <- ggplot( subset(n_mean_sd_by_size, !is.na(size)), aes(x=year, y=mean, color=size) ) +
geom_point() +
geom_smooth() +
#geom_errorbar( aes(ymin=mean-sd, ymax=mean+sd), width=.1) +
scale_x_continuous(limits=c(1700, 1800)) +
facet_wrap(~size, scales="free_y", ncol=1) +
ylab("Mean Price Per Page") +
xlab("Year") +
ggtitle("Mean Price Per Page of English Volumes Within the ESTC") +
guides(color=FALSE)   # this masks the whole key
# Save the plot
ggsave(p, file="farthings_per_page_by_size.png", scale=2)
ggsave(p, file="farthings_per_page_by_size.png", scale=1.5)
ggsave(p, file="farthings_per_page_by_size.png", scale=1.2)
